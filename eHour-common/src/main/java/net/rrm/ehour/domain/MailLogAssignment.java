/*
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 */

package net.rrm.ehour.domain;

// Generated Apr 7, 2007 1:08:18 AM by Hibernate Tools 3.2.0.beta8

import org.apache.commons.lang.builder.CompareToBuilder;
import org.apache.commons.lang.builder.EqualsBuilder;
import org.apache.commons.lang.builder.HashCodeBuilder;
import org.hibernate.annotations.Cache;
import org.hibernate.annotations.CacheConcurrencyStrategy;

import javax.persistence.*;
import java.util.Date;

/**
 * MailLogAssignment generated by hbm2java
 */
@Entity
@Table(name = "MAIL_LOG_ASSIGNMENT")
@Cache(usage = CacheConcurrencyStrategy.NONE)
public class MailLogAssignment extends MailLog
{
	private static final long serialVersionUID = -6902873370377635410L;


    @ManyToOne
    @JoinColumn(name = "PROJECT_ASSIGNMENT_ID", nullable = true)
    @Basic(fetch = FetchType.LAZY)
    private ProjectAssignment projectAssignment;

    @Column(name = "BOOKED_HOURS")
	private Float bookedHours;

    @Column(name = "BOOK_DATE")
    private Date	bookDate;

	// Constructors

	/** default constructor */
	public MailLogAssignment()
	{
	}

	/** full constructor */
	public MailLogAssignment(MailType mailType, User toUser, Date timestamp, Boolean success, String resultMsg, ProjectAssignment projectAssignment)
	{
		super(mailType, toUser, timestamp, success, resultMsg);
		this.projectAssignment = projectAssignment;
	}

	// Property accessors
	public ProjectAssignment getProjectAssignment()
	{
		return this.projectAssignment;
	}

	public void setProjectAssignment(ProjectAssignment projectAssignment)
	{
		this.projectAssignment = projectAssignment;
	}


	/**
	 * @see java.lang.Comparable#compareTo(Object)
	 */
	public int compareTo(MailLogAssignment object)
	{
		return new CompareToBuilder()
			.append(this.getProjectAssignment(), object.getProjectAssignment())
			.toComparison();
	}



	/**
	 * @return the bookDate
	 */
	public Date getBookDate()
	{
		return bookDate;
	}

	/**
	 * @param bookDate the bookDate to set
	 */
	public void setBookDate(Date bookDate)
	{
		this.bookDate = bookDate;
	}

	/**
	 * @return the bookedHours
	 */
	public Float getBookedHours()
	{
		return bookedHours;
	}

	/**
	 * @param bookedHours the bookedHours to set
	 */
	public void setBookedHours(Float bookedHours)
	{
		this.bookedHours = bookedHours;
	}

	@Override
	public boolean equals(final Object other)
	{
		if (!(other instanceof MailLogAssignment))
			return false;
		MailLogAssignment castOther = (MailLogAssignment) other;
		return new EqualsBuilder().append(projectAssignment, castOther.projectAssignment).append(bookedHours, castOther.bookedHours).append(bookDate, castOther.bookDate).isEquals();
	}

	@Override
	public int hashCode()
	{
		return new HashCodeBuilder().append(projectAssignment).append(bookedHours).append(bookDate).toHashCode();
	}

}
