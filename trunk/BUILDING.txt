Building eHour
---------------------------------------

Environment
Assuming your development environment consists of:
	- Eclipse 3.4+
	- MySQL 5.x
	- Tomcat 5.5+ (
	- Maven 2

Recommended plugins for Eclipse:
	- Subclipse
	- Sysdeo plugin for Tomcat (develops a lot faster than WTP since there's no need to republish/redeploy after a code change)
					http://www.eclipsetotale.com/tomcatPlugin.html
	- Clover plugin (eHour's clover license is almost expired so it's quite useless right now)


Setup database and configure datasource
---------------------------------------
Create a new database and create the database tables with the src/assembly/sql/fresh.mysql.sql script.
Now modify the development MySQL datasource by editing /eHour-service/src/main/profiles/dev/datasource_mysql/applicationContext-datasource.xml
and change credentials, ip address.

Compiling
---------------------------------------
Compile and generate the Eclipse metadata with 
mvn dependency:sources
mvn clean install eclipse:clean eclipse:eclipse -Denv=mysql-dev -DdownloadSources

Or use the build.bat/sh or build_src.bat/sh scripts. The build_src scripts also download the source jars of dependencies, useful but it takes a bit to download everything.

Configuring Eclipse
---------------------------------------
First install Sysdeo's devloader by unzipping the Devloader in Tomcat's server/classes directory. Unzip the plugin itself in Eclipse's dropin folder.
Start Eclipse and import the 5 projects. Right click on the eHour-web project -> properties -> Tomcat
Enable 'Is a Tomcat project', set the context name to "ehour", 'Subdirectory to set as webapp root' to /src/main/webapp
Go to the DevLoader classpath tab and check Activate. Add all jars and paths except for:
	/eHour-service/target/test-classes
	/eHour-wicketweb/target/test-classes	
	servlet-api-2.3.jar
	saxpath-1.0-FCS.jar
	stax-api-1.0.1.jar
	xercesImpl-2.8.1.jar
	xml-apis-1.0.b2.jar
	xml-apis-1.3.03.jar

Start the Tomcat server with the new start Tomcat icon in the toolbar.

Fisheye and Continuos integration
---------------------------------------
There's an instance of Fisheye installed at http://dev.ehour.nl/fisheye/
Continuous Integration is done with Continuum at http://dev.ehour.nl/continuum/ Please create an account there and check whether the build is still succesfull after you checked in.

Mylyn
---------------------------------------
There's a Mantis plugin for Mylyn, see http://mylyn-mantis.wiki.sourceforge.net/
After installing the Mantis plugin add a new task repository and as server use http://www.ehour.nl/defects/api/soap/mantisconnect.php
Don't use anonymous login but your own credentials. 





