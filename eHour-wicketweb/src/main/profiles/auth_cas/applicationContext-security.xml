<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd">

	<bean id="authorizationStrategyFactory" 
		class="net.rrm.ehour.ui.authorization.MetaDataRoleAuthorizationStrategyFactory" />

	<bean id="filterChainProxy"
		class="org.acegisecurity.util.FilterChainProxy">
		<property name="filterInvocationDefinitionSource">
			<value>
				CONVERT_URL_TO_LOWERCASE_BEFORE_COMPARISON
				PATTERN_TYPE_APACHE_ANT
    /**=channelProcessingFilter,httpSessionContextIntegrationFilter,logoutFilter,casProcessingFilter,securityContextHolderAwareRequestFilter,anonymousProcessingFilter,exceptionTranslationFilter,filterInvocationInterceptor
			</value>
		</property>
	</bean>


	<bean id="authService"
		class="net.rrm.ehour.ui.authorization.AuthService">
		<property name="userService" ref="userService" />
	</bean>

	<!-- 
	<bean
		class="org.acegisecurity.context.HttpSessionContextIntegrationFilter"
		id="httpSessionContextIntegrationFilter">
		<property name="context">
			<value>org.acegisecurity.context.SecurityContextImpl</value>
		</property>
	</bean>
	-->
	
		<bean id="httpSessionContextIntegrationFilter" class="org.acegisecurity.context.HttpSessionContextIntegrationFilter">
		<property name="forceEagerSessionCreation" value="true" />
	</bean>


	<bean id="passwordEncoder"
		class="org.acegisecurity.providers.encoding.ShaPasswordEncoder" />

	<bean id="saltSource"
		class="org.acegisecurity.providers.dao.salt.ReflectionSaltSource">
		<property name="userPropertyToUse" value="getSalt" />
	</bean>

	<!-- CAS integration -->

	<bean id="serviceProperties"
		class="org.acegisecurity.ui.cas.ServiceProperties">
		<property name="service">
			<value>https://local.bull.co.ma:443/ehour/j_acegi_cas_security_check</value>
		</property>
		<property name="sendRenew">
			<value>false</value>
		</property>
	</bean>

	<bean id="authenticationManager"
		class="org.acegisecurity.providers.ProviderManager">
		<property name="providers">
			<list>
				<ref bean="authenticationProvider" />
			</list>
		</property>
	</bean>

	<bean id="authenticationProvider"
		class="org.acegisecurity.providers.cas.CasAuthenticationProvider">
		<property name="casAuthoritiesPopulator">
			<ref bean="casAuthoritiesPopulator" />
		</property>
		<property name="casProxyDecider">
			<ref bean="casProxyDecider" />
		</property>
		<property name="ticketValidator">
			<ref bean="casProxyTicketValidator" />
		</property>
		<property name="statelessTicketCache">
			<ref bean="statelessTicketCache" />
		</property>
		<property name="key">
			<value>changeit</value>
		</property>
	</bean>

	<bean id="casProxyTicketValidator"
		class="org.acegisecurity.providers.cas.ticketvalidator.CasProxyTicketValidator">
		<property name="casValidate">
			<value>https://local.bull.co.ma:443/cas/proxyValidate</value>
		</property>
		<property name="proxyCallbackUrl">
			<value>https://local.bull.co.ma:443/ehour/casProxy/receptor</value>
		</property>
		<property name="serviceProperties">
			<ref bean="serviceProperties" />
		</property>
		<property name="trustStore"><value>C:\Java\jdk1.5.0_14\jre\lib\security\cacerts</value></property>
	</bean>

	<bean id="cacheManager"
		class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">
		<property name="configLocation">
			<value>classpath:/ehcache-failsafe.xml</value>
		</property>
	</bean>

	<bean id="ticketCacheBackend"
		class="org.springframework.cache.ehcache.EhCacheFactoryBean">
		<property name="cacheManager">
			<ref local="cacheManager" />
		</property>
		<property name="cacheName">
			<value>ticketCache</value>
		</property>
	</bean>

	<bean id="statelessTicketCache"
		class="org.acegisecurity.providers.cas.cache.EhCacheBasedTicketCache">
		<property name="cache">
			<ref local="ticketCacheBackend" />
		</property>
	</bean>

	<bean id="casAuthoritiesPopulator"
		class="org.acegisecurity.providers.cas.populator.DaoCasAuthoritiesPopulator">
		  <property name="userDetailsService"><ref bean="authService"/></property>
	</bean>

	<bean id="casProxyDecider"
		class="org.acegisecurity.providers.cas.proxy.RejectProxyTickets" />


	<bean id="logoutFilter"
		class="org.acegisecurity.ui.logout.LogoutFilter">
		<constructor-arg value="/index.jsp" />
		<!-- URL redirected to after logout -->
		<constructor-arg>
			<list>
				<bean
					class="org.acegisecurity.ui.logout.SecurityContextLogoutHandler" />
			</list>
		</constructor-arg>
		<property name="filterProcessesUrl" value="/j_acegi_logout.jsf" />
	</bean>

	<bean
		class="org.acegisecurity.wrapper.SecurityContextHolderAwareRequestFilter"
		id="securityContextHolderAwareRequestFilter" />



	<!-- ///////////////////////////////////////////////  -->
	<bean id="casProcessingFilter"
		class="org.acegisecurity.ui.cas.CasProcessingFilter">
		<property name="authenticationManager">
			<ref bean="authenticationManager" />
		</property>
		<property name="authenticationFailureUrl">
			<value>/casfailed.jsp</value>
		</property>
		<property name="defaultTargetUrl">
			<value>/eh/login/Login</value>
		</property>
		<property name="filterProcessesUrl">
			<value>/j_acegi_cas_security_check</value>
		</property>
	</bean>

	<bean id="exceptionTranslationFilter"
		class="org.acegisecurity.ui.ExceptionTranslationFilter">
		<property name="authenticationEntryPoint">
			<ref local="casProcessingFilterEntryPoint" />
		</property>
	</bean>

	<bean id="casProcessingFilterEntryPoint"
		class="org.acegisecurity.ui.cas.CasProcessingFilterEntryPoint">
		<property name="loginUrl">
			<value>https://local.bull.co.ma:443/cas/login</value>
		</property>
		<property name="serviceProperties">
			<ref bean="serviceProperties" />
		</property>
	</bean>

	<!-- ////////////////////////////// -->

	<!--  CAS channelProcessingFilter -->
	<bean id="channelProcessingFilter"
		class="org.acegisecurity.securechannel.ChannelProcessingFilter">
		<property name="channelDecisionManager">
			<ref bean="channelDecisionManager" />
		</property>
		<property name="filterInvocationDefinitionSource">
			<value>
				CONVERT_URL_TO_LOWERCASE_BEFORE_COMPARISON
				\A/.*\Z=REQUIRES_SECURE_CHANNEL
				\A/index.jsp\Z=REQUIRES_SECURE_CHANNEL
				\A/j_acegi_security_check.*\Z=REQUIRES_SECURE_CHANNEL
				\A.*\Z=REQUIRES_SECURE_CHANNEL
			</value>
		</property>
	</bean>

	<bean id="channelDecisionManager"
		class="org.acegisecurity.securechannel.ChannelDecisionManagerImpl">
		<property name="channelProcessors">
			<list>
				<ref bean="secureChannelProcessor" />
				<ref bean="insecureChannelProcessor" />
			</list>
		</property>
	</bean>

	<bean id="secureChannelProcessor"
		class="org.acegisecurity.securechannel.SecureChannelProcessor" />
	<bean id="insecureChannelProcessor"
		class="org.acegisecurity.securechannel.InsecureChannelProcessor" />

	
	<!--  CAS channelProcessingFilter -->
		<bean
		class="org.acegisecurity.intercept.web.FilterSecurityInterceptor"
		id="filterInvocationInterceptor">
		<property name="authenticationManager">
			<ref bean="authenticationManager" />
		</property>
		
		<property name="accessDecisionManager">
			<ref bean="httpRequestAccessDecisionManager" />
		</property>
	 
	   	<property name="observeOncePerRequest" value="false"/>
	
		<property name="objectDefinitionSource">
			<value>
				CONVERT_URL_TO_LOWERCASE_BEFORE_COMPARISON
				\A/eh/.*\Z=ROLE_CONSULTANT,ROLE_ADMIN,ROLE_REPORT,ROLE_PROJECTMANAGER
			</value>
		</property>
	</bean>
	<bean class="org.acegisecurity.vote.AffirmativeBased"
		id="httpRequestAccessDecisionManager">
		<property name="allowIfAllAbstainDecisions">
			<value>false</value>
		</property>
		<property name="decisionVoters">
			<list>
				<ref bean="roleVoter" />
			</list>
		</property>
	</bean>
	<!-- An access decision voter that reads ROLE_* configuration settings -->
	<bean class="org.acegisecurity.vote.RoleVoter" id="roleVoter" />

	<bean
		class="org.acegisecurity.providers.anonymous.AnonymousProcessingFilter"
		id="anonymousProcessingFilter">
		<property name="key" value="changeThis" />
		<property name="userAttribute"
			value="anonymousUser,ROLE_ANONYMOUS" />
	</bean>

	<!-- END OF CAS Integration -->


</beans>